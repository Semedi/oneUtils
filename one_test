#!/bin/bash

ONE_LOCATION=/home/semedi/Workspace/one
ONE_VAR=/var/lib/one


ONE_BAK=$ONE_VAR/.bak

function new_model {
    cp $ONE_VAR/one.db $ONE_VAR/one.db.bak
    rm -R $ONE_VAR/one.db
    rm -R $ONE_VAR/.one
    mkdir $ONE_VAR/.one

    echo $1:$2 > $ONE_VAR/.one/one_auth
}

# create folders:
if [ ! -d $ONE_BAK ]; then mkdir $ONE_BAK; fi

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -s|--snap)
        new_dir=$ONE_BAK/$2_$(date +%F_%R)
        mkdir $new_dir

        cp $ONE_VAR/one.db $new_dir
        cp -R $ONE_VAR/.one $new_dir

        shift # past argument
        shift # past argument
        ;;
    -l|--list)
        SEARCHPATH="$2"
        id=0
        for i in `ls -t $ONE_BAK `;
        do
            echo $id $i
            let "id+=1"
        done;

        shift # past argument
        ;;
    -n|--new)
        /usr/bin/one stop
        new_model oneadmin opennebula
        /usr/bin/one start

        shift # past argument
        ;;
    -c|--clean)
        LIBPATHS="$2"
        index=0
        i=-1
        for folder in `ls -t $ONE_BAK`;
        do
            let "i+=1"
            if [ $index -eq $i ]; then continue; fi
            rm -R $ONE_BAK/$folder
        done;

        shift # past argument
        ;;
    -r|--revert)
        /usr/bin/one stop
        index_revert="$2"
        i=-1
        for dir in `ls -t $ONE_BAK`;
        do
            let "i+=1"
            if [ $index_revert -eq $i ];
            then
                path=$ONE_BAK/$dir

                if [ -d "$DIRECTORY" ]; then
                    rm -R $ONE_VAR/.one
                fi

                cp -R $path/.one $ONE_VAR/.one
                cp $path/one.db $ONE_VAR/one.db
            fi
        done;

        /usr/bin/one start

        shift # past argument
        shift # past value
        ;;
    --default)
        DEFAULT=YES

        shift # past argument
        ;;
    *)    # unknown option
        POSITIONAL+=("$1") # save it in an array for later
        shift # past argument
        ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [[ -n $1 ]]; then
    echo "Last line of file specified as non-opt/last argument:"
    tail -1 "$1"
fi
